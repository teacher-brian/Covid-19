write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
# all us state and then some
drop_ship <- c("Diamond Princess","Grand Princess")
drop_state <- c("New Jersey","New York","Massachusetts","California",)
protest_states <- c("Minnesota","Texas","Colorado","Michigan","Illinois",
"Wisconsin","Ohio","Mississippi","North Carolina","Alabama","Arizona")
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
h
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
#write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Date <- ymd(cg$Date)
countries.of.interest <- c('Sweden', 'Korea, South','US')
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop)) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# all us state and then some
drop_ship <- c("Diamond Princess","Grand Princess")
drop_state <- c("New Jersey","New York","Massachusetts","California",)
protest_states <- c("Minnesota","Texas","Colorado","Michigan","Illinois",
"Wisconsin","Ohio","Mississippi","North Carolina","Alabama","Arizona")
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
#write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Date <- ymd(cg$Date)
countries.of.interest <- c('Sweden', 'Korea, South','US')
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop)) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
rm(list=ls(-covid_US_cases_tidy))
# all us state and then some
drop_ship <- c("Diamond Princess","Grand Princess")
drop_state <- c("New Jersey","New York","Massachusetts","California",)
protest_states <- c("Minnesota","Texas","Colorado","Michigan","Illinois",
"Wisconsin","Ohio","Mississippi","North Carolina","Alabama","Arizona")
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>%
filter(!Province_State %in% drop_state) %>%
filter(Province_State %in% protest_states) %>%
mutate(new_cases= count-lag(count))%>%
group_by(Date,Province_State) %>% arrange(desc(Date,new_cases)) %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with error bars, loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>% str
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship)
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20",!Province_State %in% drop_ship) %>% na.omit()
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
#recent_date1 <- colnames(covid_cases_us)[length(covid_cases_us)]
#if (rescent_date1<=recent_date)
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
new_cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima')
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
new_cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scale='free')
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
library(here)
library(tidyverse)
library(lubridate)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
new_cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
covid_US_cases_tidy %>%filter(Date>"2020-5-15",Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2)
covid_US_cases_tidy %>%filter(Date>"2020-5-15",Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scales = 'free')
today()-14
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scales = 'free')
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
new_cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington') %>%
filter(Admin2 %in% new_cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~Admin2,scales = 'free')
recent_date
colnames(covid_cases_us)[length(covid_cases_us)]
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
colnames(covid_cases_us)[length(covid_cases_us)]
