url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==F){print(page[i])}
else(data <- read.csv(file=url))
df %>%
#select(2:7) %>%
filter(YEAR==12)->df
print(df)
}
for (i in 1:length(page[1:3])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==F){print(page[i])}
else(data <- read.csv(file=url))
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(df)
}
url
read.csv(file=url)
for (i in 1:length(page[1:1])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(df)
}
print(data)
for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
}
df<- for (i in 1:length(page)){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
}
df<- for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
}
View(data)
df<- for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
return(data)
}
View(data)
for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
#return(data)
}
View(data)
for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->rbind(data,data)
#return(data)
}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
unique(data$STNAME)
levels(data$STNAME)
State<- levels(data$STNAME)
paste(df_,State)
paste("df_",State)
for (i in 1:length(page[1:2])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
State<- levels(data$STNAME)
paste("df_",State)
}
paste("df_",State) <- data
?else
?if
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else(next)
data %>%
select(2:7) %>%
filter(YEAR==12)->data
df[i] <- data
}
View(df)
df <- list(1:50)
df
df <- list(1:50)
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
df[i] <- data
}
df
class(data)
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
class(data)
df[i] <- data
}
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(class(data))
df[i] <- data
}
df[2]
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
df[i] <- data
}
# county level state population data
base_url <-  'https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/counties/asrh/cc-est2019-agesex-'
# between 1 and 56 there are some 50 odd states.  Some numbers are skipped.
# the first one (above is alabama)
library(RCurl)
library(tidyverse)
page <- c(paste0(0,1:9),10:56)
df <- list(1:50)
for (i in 1:length(page[1:4])){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
df[[i]] <- data
}
View(df)
getwd()
df <- list(1:50)
for (i in 1:length(page)){
url <- paste0(base_url,page[i],'.csv')
if(url.exists(url=url)==T){data <- read.csv(file=url)}
else{next}
data %>%
select(2:7) %>%
filter(YEAR==12)->data
print(data)
df[[i]] <- data
}
save(df, file = "US_county_population.RData")
rm(df)
df
load(US_county_population.RData)
load("US_county_population.RData")
df
lapply(df,nrow)
lapply(df,length)
unlist(df)
do.call(rbind,df)
df<- do.call(rbind,df)
class(df)
write.csv(df,'US_county_pop.csv')
load("US_county_population.RData")
library(tidyverse)
library(lubridate)
library(forcats)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
covid_US_cases_tidy
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- ymd(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% select(d)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_glob_death <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',stringsAsFactors = F)
#write.csv(covid_glob_death,file='./data/covid_global_deaths_raw.csv')
recent_date <- colnames(covid_glob_death)[length(covid_glob_death)]
head(covid_glob_death)
str(covid_glob_death)
countryID_dates<- covid_glob_death %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- covid_glob_death %>% select(Country.Region,-c(X1.22.20:recent_date))
covid_glob_death_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
covid_glob_death_tidy<-covid_glob_death_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_glob_death_tidy)
#Use lapply() to coerce and replace the chosen columns:
covid_glob_death_tidy$Country.Region <-  factor(covid_glob_death_tidy$Country.Region)
covid_glob_death_tidy$Date<- mdy(covid_glob_death_tidy$Date)
str(covid_glob_death_tidy)
write.csv(covid_glob_death_tidy,file='./data/covid_global_deaths_tidy.csv')
cgd<- read.csv(here::here('data',file='./covid_global_deaths_tidy.csv'),stringsAsFactors = F)
cgd$Country.Region <- as.factor(cgd$Country.Region)
cgd$Date <- ymd(cgd$Date)
countries.of.interest <- c('Sweden', 'Korea, South','US')
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
# Deaths per cap of south kor, us, sweden
cgd %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop)) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
cgd %>%
#group_by(Country.Region) %>%
summarise(sum(count))
library(tidyverse)
library(lubridate)
# function to strip X from date and conver to lubridate
drop_x <- function(x){
y <- gsub("X","",x)
y <- mdy(y)
return(y)
}
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
str(cg)
countryID_dates<- cg %>%
#select(Country.Region, Province.State,Lat, Long,X1.22.20:recent_date) %>%
gather(key = Date, value= count,-c(Country.Region,Lat,Long,Province.State))
#countryID_info<- cg %>% select(Country.Region,
#Province.State,
#                              -c(X1.22.20:recent_date))
#cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
## by including province state above, the joining actdion has been interfered with
cg_tidy<-countryID_dates %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Province.State <-  factor(cg_tidy$Province.State)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Province.State <-  factor(cg$Province.State)
cg$Date <- ymd(cg$Date)
str(cg)
# total as of today
today <- drop_x(recent_date)
cg %>%
filter(Date==today) %>%
#group_by(Date) %>%
summarise(total=sum(count))
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
fr.pop <- 65e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total,label=total))+geom_point(size=.5)+
geom_text(aes(label=ifelse(Date==today,total,'')),hjust=1.5,vjust=.5)+
ggtitle(paste0('total cases as of\n',today))+
scale_y_continuous(labels = scales::comma)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == today) %>%
filter(Province.State=="") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(grand_tot=sum(total)) %>%
print(.,n=400)
rm(list=ls())
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington')
today()
Date
source('~/Projects/Psych217/ZipFilePractice/scripts/covid_US_cases_exporatory_graphs.r', echo=TRUE)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington')
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington')
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'free')
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'fixed')
covid_US_cases_tidy
covid_US_cases_tidy %>% select(Admin2) %>% filter(!is.null(Admin2))
covid_US_cases_tidy %>% select(Admin2) %>% filter(!is.null(Admin2)) %>% with(unique(Admin2))
memory.size
memory.size()
df
load("US_county_population.RData")
df<- do.call(rbind,df)
df
rm(list=ls(-df))
rm(list=-df)
rm(list=ls())
library(here)
library(tidyverse)
library(lubridate)
load("US_county_population.RData")
df<- do.call(rbind,df)
library(forcats)
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy
covid_US_cases_tidy %>% filter(Country_Region=='US')
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2)
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',is.null(Admin2)==T) %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2,Date,count) %>% with(Admin2,is.null(Admin2))
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2=="") %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2!="") %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2!="") %>% select(Admin2) %>% with(Admin2,unique())
df
