cg_tidy$Province.State <-  factor(cg_tidy$Province.State)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
#write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Province.State <-  factor(cg$Province.State)
cg$Date <- ymd(cg$Date)
str(cg)
# total as of today
today <- drop_x(recent_date)
cg %>%
filter(Date==today) %>%
#group_by(Date) %>%
summarise(total=sum(count))
# comps
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
fr.pop <- 65e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total,label=total))+geom_point(size=.5)+
geom_text(aes(label=ifelse(Date==today,total,'')),hjust=1.5,vjust=.5)+
ggtitle(paste0('total cases as of\n',today))+
scale_y_continuous(labels = scales::comma)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == today) %>%
filter(Province.State=="") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(grand_tot=sum(total)) %>% arrange(desc(grand_tot)) %>%
print(.,n=400)
sk.pop <- 51e6/1e5
US.pop <- 330e6/1e5
sw.pop <- 10e6/1e5
uk.pop <- 68e6/1e5
fr.pop <- 65e6/1e5
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)+
ggtitle('cases per 100k') + labs(y='cases per 100k')
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region,scales = 'free')+
ggtitle('cases per 100k') + labs(y='cases per 100k')
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% select(d)
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',alpha=.5)+geom_line(stat='smooth',alpha=.5)+
ggtitle("Daily reporting of Fatalities")
drop_state <- c("New York","Massachusetts")
covid_tidy %>%
select(-c(iso2:FIPS,Admin2,Country_Region)) %>%
group_by(Province_State,Date) %>%
summarise(count=sum(count,na.rm=T)) %>%
filter(Date>"2020-04-20") %>% #,!Province_State %in% drop_state) %>%
mutate(new_deaths= count-lag(count)) %>%
group_by(Date,Province_State) %>%
ggplot(aes(x=Date,new_deaths))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~Province_State,scales = 'free')+
ggtitle("new deaths in the States since 4/21")
library(knitr)
library(slackr)
library(tidyverse)
slackr_setup(config_file = "~/.slackr",echo=T)
slackr_channels()
dev.slackr()
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)+ggtitle("count of Deaths in King and Spokane Counties")
dev.slackr()
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% select(d)
library(here)
library(tidyverse)
library(lubridate)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
source('~/Projects/Psych217/ZipFilePractice/scripts/covid_US_cases_exporatory_graphs.r', echo=TRUE)
library(here)
library(tidyverse)
library(lubridate)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
library(tidyverse)
library(lubridate)
library(forcats)
library(viridis)
# read US Cases into Rstudio ----------------------------------------------
library(tidyverse)
library(lubridate)
library(forcats)
library(viridis)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
library(tidyverse)
library(lubridate)
library(forcats)
library(viridis)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
#covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>% filter(#Date>today()-21,
Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
wa.new.cases %>% filter(Admin2=="King") %>% select(Admin2,count,count_lag,new_cases) %>% mutate(week=week(Date)) %>% group_by(week,Admin2)%>% summarise(mean_new=mean(new_cases,na.rm=T),sum_new=sum(new_cases,na.rm=T)) %>% mutate(d=ymd("2020-01-01")+weeks(week))->weekly_king
wa.new.cases %>% filter(Admin2=="King",
#Date<=ymd("2020-10-15")
) %>%
# consdier changing date filter above
select(Admin2,count,count_lag,new_cases,Date) %>%
mutate(week=week(Date)) %>%
group_by(week,Admin2) %>%
ggplot(aes(x=Date,y=new_cases))+
geom_point(color='magenta',size=.1) +
# consdier changing date filter below
geom_point(data=weekly_king# %>% filter(d<=ymd(today()))
,
aes(x=d,y=mean_new),color='royalblue3',shape=18,size=1.5)+
geom_smooth(data=weekly_king,aes(x=d,y=mean_new),se = F, color='blue',          size=.1)+
ggtitle("King County, WA\npink =  daily cases\n blue =  weekly average")+
geom_vline(xintercept=ymd("2020-11-03"))+
geom_label(label="election 11/3 --->",
x= ymd("2020-10-10"),
y = 750
)+
geom_vline(xintercept=ymd("2020-02-29"))+
geom_label(label="<-- first stay at home order",
x= ymd("2020-04-01"),
y = 750
)
library(here)
library(tidyverse)
library(lubridate)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
recent_date
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
library(tidyverse)
library(lubridate)
library(forcats)
library(viridis)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
recent_date
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>% filter(#Date>today()-21,
Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
wa.new.cases %>% filter(Admin2=="King") %>% select(Admin2,count,count_lag,new_cases) %>% mutate(week=week(Date)) %>% group_by(week,Admin2)%>% summarise(mean_new=mean(new_cases,na.rm=T),sum_new=sum(new_cases,na.rm=T)) %>% mutate(d=ymd("2020-01-01")+weeks(week))->weekly_king
wa.new.cases %>% filter(Admin2=="King",
#Date<=ymd("2020-10-15")
) %>%
# consdier changing date filter above
select(Admin2,count,count_lag,new_cases,Date) %>%
mutate(week=week(Date)) %>%
group_by(week,Admin2) %>%
ggplot(aes(x=Date,y=new_cases))+
geom_point(color='magenta',size=.1) +
# consdier changing date filter below
geom_point(data=weekly_king# %>% filter(d<=ymd(today()))
,
aes(x=d,y=mean_new),color='royalblue3',shape=18,size=1.5)+
geom_smooth(data=weekly_king,aes(x=d,y=mean_new),se = F, color='blue',          size=.1)+
ggtitle("King County, WA\npink =  daily cases\n blue =  weekly average")+
geom_vline(xintercept=ymd("2020-11-03"))+
geom_label(label="election 11/3 --->",
x= ymd("2020-10-10"),
y = 750
)+
geom_vline(xintercept=ymd("2020-02-29"))+
geom_label(label="<-- first stay at home order",
x= ymd("2020-04-01"),
y = 750
)
wa.new.cases %>% filter(Admin2=="King",
#Date<=ymd("2020-10-15")
) %>%
# consdier changing date filter above
select(Admin2,count,count_lag,new_cases,Date) %>%
mutate(week=week(Date)) %>%
group_by(week,Admin2) %>%
ggplot(aes(x=Date,y=new_cases))+
geom_point(color='magenta',size=.1) +
# consdier changing date filter below
geom_point(data=weekly_king# %>% filter(d<=ymd(today()))
,
aes(x=d,y=mean_new),color='royalblue3',shape=18,size=1.5)+
geom_smooth(data=weekly_king,aes(x=d,y=mean_new),se = F, color='blue',          size=.1)+
ggtitle("King County, WA\npink =  daily cases\n blue =  weekly average")+
geom_vline(xintercept=ymd("2020-11-03"))+
geom_label(label="election 11/3 --->",
x= ymd("2020-10-10"),
y = 750
)+
geom_vline(xintercept=ymd("2020-02-29"))+
geom_label(label="<-- first stay at home order",
x= ymd("2020-04-01"),
y = 750
)
library(tidyverse)
library(lubridate)
library(forcats)
library(viridis)
wa.new.cases %>% filter(Admin2=="King",
#Date<=ymd("2020-10-15")
) %>%
# consdier changing date filter above
select(Admin2,count,count_lag,new_cases,Date) %>%
mutate(week=week(Date)) %>%
group_by(week,Admin2) %>%
ggplot(aes(x=Date,y=new_cases))+
geom_point(color='magenta',size=.1) +
# consdier changing date filter below
geom_point(data=weekly_king# %>% filter(d<=ymd(today()))
,
aes(x=d,y=mean_new),color='royalblue3',shape=18,size=1.5)+
geom_smooth(data=weekly_king,aes(x=d,y=mean_new),se = F, color='blue',          size=.1)+
ggtitle("King County, WA\npink =  daily cases\n blue =  weekly average")+
geom_vline(xintercept=ymd("2020-11-03"))+
geom_label(label="election 11/3 --->",
x= ymd("2020-10-10"),
y = 750
)+
geom_vline(xintercept=ymd("2020-02-29"))+
geom_label(label="<-- first stay at home order",
x= ymd("2020-04-01"),
y = 750
)
View(UID_dates)
