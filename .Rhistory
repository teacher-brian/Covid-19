theme(panel.grid.major = theme_blank()) +
theme(panel.grid.minor = theme_blank()) +
theme(axis.text.x = theme_blank(),axis.text.y = theme_blank()) +
theme(axis.ticks = theme_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(long,lat),colour="green",size=4)
p
p <- ggplot(legend=FALSE) +
geom_polygon( data=world, aes(x=long, y=lat,group=group)) +
theme(panel.background = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text.x = element_blank(),axis.text.y = element_blank()) +
theme(axis.ticks = element_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(long,lat),colour="green",size=4)
p
str(covid_tidy)
covid_tidy %>% select(Province_State,Admin2,Lat,Long_)
covid_tidy %>% select(Province_State,Admin2,Lat,Long_) %>% filter(Province_State=="Washington")
sf<-covid_tidy %>% select(Province_State,Admin2,Lat,Long_) %>% filter(Province_State=="Washington")
p <- ggplot(legend=FALSE) +
geom_polygon( data=world, aes(x=long, y=lat,group=group)) +
theme(panel.background = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text.x = element_blank(),axis.text.y = element_blank()) +
theme(axis.ticks = element_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(long,lat),colour="green",size=4)
p
p <- p + geom_point(data=sf,aes(Long_,Lat),colour="green",size=4)
p
p <- ggplot(legend=FALSE) +
geom_polygon( data=world, aes(x=Long_, y=lat,group=group)) +
theme(panel.background = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text.x = element_blank(),axis.text.y = element_blank()) +
theme(axis.ticks = element_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(Long_,Lat),colour="green",size=4)
p
p <- ggplot(legend=FALSE) +
geom_polygon( data=world, aes(x=long, y=lat,group=group)) +
theme(panel.background = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text.x = element_blank(),axis.text.y = element_blank()) +
theme(axis.ticks = element_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(Long_,Lat),colour="green",size=4)
p
?map_data
maps::map()
maps::state.fips
map_data('washington:main')
state.fips('washington:main')
world<-map_data('state')
state<-map_data('state')
sf<-covid_tidy %>% select(Province_State,Admin2,Lat,Long_) %>% filter(Province_State=="Washington")
p <- ggplot(legend=FALSE) +
geom_polygon( data=state, aes(x=long, y=lat,group=group)) +
theme(panel.background = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text.x = element_blank(),axis.text.y = element_blank()) +
theme(axis.ticks = element_blank()) +
xlab("") + ylab("")
p <- p + geom_point(data=sf,aes(Long_,Lat),colour="green",size=4)
p
str(covid_cases_us)
summary(covid_us)
str(covid_us)
covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
str(covid_US_cases_tidy)
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
names(covid_tidy[c(1:8,11)])
cols<- names(covid_tidy[c(1:8,11)])
names(covid_US_cases_tidy[c(1:8,11)])
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases,color=Admin2))+
geom_point(shape=18)+geom_line(alpha=.2)+
facet_wrap(~Province_State)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0)
group_by(Province_State) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0)
group_by(Province_State) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases,color=Province_State))+
geom_point(shape=18)+geom_line(alpha=.2)+
facet_wrap(~Province_State)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0)
group_by(Province_State) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+
facet_wrap(~Province_State)
write(covid_cases_us,file='covid_US_cases_raw.csv')
write.csv(covid_cases_us,file='covid_US_cases_raw.csv')
?read.csv
library(readr)
dataset <- read_csv("world_COVID_update_ 03_13_2020_with_demogrpahics.csv",
col_types = cols(case_in_country = col_integer(),
exposure_end = col_date(format = "%m/%d/%Y"),
exposure_start = col_date(format = "%m/%d/%Y"),
hosp_visit_date = col_date(format = "%m/%d/%Y"),
reporting_date = col_date(format = "%m/%d/%Y"),
symptom_onset = col_date(format = "%m/%d/%Y")),
skip = 1)
View(dataset)
str(dataset)
df<- dataset
df<- data.frame(dataset)
rm(df)
mean(dataset$age)
mean(dataset$age,na.rm = T)
hist(dataset$age,na.rm = T)
hist(dataset$age)
by(dataset$age,dataset$gender,hist)
by(dataset$age,dataset$gender,mean na.rm=T)
by(dataset$age,dataset$gender,mean, na.rm=T)
by(dataset$age,dataset$gender,sd, na.rm=T)
by(dataset$age,dataset$gender,plot)
str(dataset)
subset(dataset,subset= dataset$country,select=age)
subset(x=dataset,subset= country,select=age)
subset(x=dataset,subset= "country",select='age')
subset(x=dataset,subset= country=="USA",select='age')
dataset[,"age"]
dataset[,c("age","country","gender")]
tapply(dataset[,c("age","country","gender")],"gender",mean,na.rm=T)
tapply(dataset[,c("age","country","gender")],"dataset$gender",mean,na.rm=T)
tapply(dataset[,c("age","country","gender")],dataset$gender,mean,na.rm=T)
dataset[,c("age","country","gender")]
df<- dataset[,c("age","country","gender")]
tapply(df,gender,mean(age,na.rm=T))
tapply(df,gender,mean(dataset$age,na.rm=T))
tapply(df$age,gender,mean,na.rm=T)
?tapply
tapply(df$age,gender,mean)
tapply(df$age,df$gender,mean)
tapply(df$age,df$gender,mean na.rm=T)
tapply(df$age,df$gender,mean, na.rm=T)
boxplot(df$age~df$gender)
dataset$death
rm(list(dataset,df))
rm(list=c(dataset,df))
rm(list=c('dataset','df'))
df <- read.csv("world_COVID_update_ 03_13_2020_with_demogrpahics.csv",skip=1,
stringsAsFactors = F,header = T)
cols_factor <-
str(df)
summary(df$death)
(df$death)
table(df$death)
df %>% filter(country!="China")
library(tidyverse)
library(lubridate)
df %>% filter(country!="China")
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death),dif=death-symptom_onset)
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death))
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death)) %>%
select(symptom_onset,death)
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death)) %>%
select(symptom_onset,death) %>% mutate(dif=death-symptom_onset)
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death)) %>%
select(symptom_onset,death) %>% mutate(dif=death-symptom_onset) %>% complete.cases
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death)) %>%
select(symptom_onset,death) %>% mutate(dif=death-symptom_onset) %>% na.omit()
df %>% filter(country!="China") %>% mutate(symptom_onset=mdy(symptom_onset),death=mdy(death)) %>%
select(symptom_onset,death) %>% mutate(dif=death-symptom_onset) %>% na.omit() %>% summarise(m.d=mean(dif))
df %>% filter(country =="China") %>% select(symptom_onset)
df %>% filter(country =="China") %>% select(symptom_onset,death)
str(df)
df %>% filter(country =="China") %>% select(symptom_onset,death) %>% mutate(case_when(
death== '1' ~ reporting.date))
df %>% filter(country =="China") %>% mutate(case_when(
death== '1' ~ reporting.date))
death== '1' ~ reporting.date)) %>% select(death)
source('~/.active-rstudio-document', echo=TRUE)
death== '1' ~ reporting.date)) %>% select(death)
df %>% filter(country =="China") %>% mutate(case_when(
death== '1' ~ reporting.date))
death== '1' ~ reporting.date)) %>% select(death)
df %>% filter(country =="China") %>% mutate(case_when(death== '1' ~ reporting.date))
df %>% filter(country =="China") %>%
mutate(case_when(death== '1' ~ reporting.date)) %>% filter(death!='0')
df %>% filter(country =="China") %>%
mutate(case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
selectd(death)
df %>% filter(country =="China") %>%
mutate(case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
select(death)
df %>% filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
select(death)
df %>% filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date)) %>% filter(death!='0')
df %>% filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
summarise(n())
df %>% #filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
summarise(n())
df %>% #filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date)) %>% filter(death!='0') %>%
group_by(country) %>%
summarise(n())
df %>% #filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date))# %>% filter(death!='0') %>%
df<- df %>% #filter(country =="China") %>%
mutate(death=case_when(death== '1' ~ reporting.date))# %>% filter(death!='0') %>%
str(df)
apply(df,2,table)
apply(df,2,factor)
str(df)
names(df[,c(3,9,11,14:15,19,20)]
)
df[,c(3,9,11,14:15,19,20)
)
df[,c(3,9,11,14:15,19,20)]
cols_factor <-  names(df[,c(3,9,11,14:15,19,20)])
lapply(df[cols_factor], factor)  ## as.factor() could also be used
cols_date <-  names(df[,c(3,9,11,14:15,19,20)])
lapply(df[cols_date], date)  ## as.factor() could also be used
lapply(df[cols_date], date, "m%/d%/Y%")  ## as.factor() could also be used
lapply(df[cols_date], date( "m%/d%/Y%"))  ## as.factor() could also be used
df[cols_date]
mdy(df[cols_date])
df[,3]
mdy(df[,3])
df %>% select(cols_date)
df[,cols_date]
?mutate_all
df[,cols_date] %>% mutate_all(mdy)
df[,cols_date]<- df[,cols_date] %>% mutate_all(mdy)
str(df)
cols_date
df %>% select(location, country,gender, age, symptom_onset,death,recovered)
df %>% select(location, country,gender, age, symptom_onset,death,recovered) %>%
group_by(death) %>% summarise(n())
df %>% select(location, country,gender, age, symptom_onset,death,recovered) %>%
group_by(death) %>% filter(location =="Washington") %>% summarise(n())
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
str(covid_US_cases_tidy)
covid_us <- read.csv(file='../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_us <- read.csv(file='../data/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_us <- read.csv(file='..//COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_us <- read.csv(file='../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
library(tidyverse)
library(lubridate)
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0)
group_by(Province_State) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+
facet_wrap(~Province_State)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)
df <- read.csv("world_COVID_update_ 03_13_2020_with_demogrpahics.csv",skip=1,
stringsAsFactors = F,header = T)
df <- read.csv("./data/world_COVID_update_ 03_13_2020_with_demogrpahics.csv",skip=1,
stringsAsFactors = F,header = T)
getwd()
write(covid_cases_us_tidy,file='./data/covid_cases_us_tidy.csv')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
#write.csv(covid_cases_us,file='covid_US_cases_raw.csv')
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write(covid_cases_us_tidy,file='./data/covid_cases_us_tidy.csv')
write(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
read.csv("./data/covid_US_cases_raw.csv",stringsAsFactors = F)
covid_cases_us <- read.csv("./data/covid_US_cases_raw.csv",stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_US_cases_tidy %>% #filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0)
group_by(Province_State) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+
facet_wrap(~Province_State)
covid_us <- read.csv("./data/covid_US_deaths",stringsAsFactors = F)
getwd()
read.csv("./data/covid_US_deaths_raw.csv",stringsAsFactors = F)
covid_us <- read.csv("./data/covid_US_deaths_raw.csv",stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+geom_line(alpha=.2)+
ggtitle("Daily reporting of Fatalities")
libraries <- c("here","ggplot2","lubridate","tidyverse")
library(libraries)
library(list=libraries)
lapply(libraries, library, character.only = TRUE)
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
covid_us <- read.csv(here("covid_US_deaths_raw.csv",stringsAsFactors = F))
read.csv(here("covid_US_deaths_raw.csv",stringsAsFactors = F))
getwd()
read.csv(here("covid_US_deaths_raw.csv",stringsAsFactors = F))
read.csv(here("covid_US_deaths_raw.csv"
)
)
read.csv(here("data","covid_US_deaths_raw.csv",stringsAsFactors = F))
here("data","covid_US_deaths_raw.csv",stringsAsFactors = F)
here()
file.path()
library(here)
here("data","covid_US_deaths_raw.csv",stringsAsFactors = F)
read.csv(here("data","covid_US_deaths_raw.csv"))
read.delim(here("data","covid_US_deaths_raw.csv"))
read.csv(here("data","covid_US_deaths_raw.csv"))
read.csv(("data","covid_US_deaths_raw.csv",stringsAsFactors = F))
read.csv(("./data/covid_US_deaths_raw.csv",stringsAsFactors = F))
read.csv("./data/covid_US_deaths_raw.csv", stringsAsFactors = F)
here("./data/covid_US_deaths_raw.csv", stringsAsFactors = F)
here("data","covid_US_deaths_raw.csv", stringsAsFactors = F)
read.delim(here("data","covid_US_deaths_raw.csv", stringsAsFactors = F))
read.delim(here("data","covid_US_deaths_raw.csv", stringsAsFactors = F))
here()
here::here()
here::here("data","covid_US_deaths_raw.csv", stringsAsFactors = F)
read.csv(here::here("data","covid_US_deaths_raw.csv", stringsAsFactors = F))
read.csv(here::here("covid_US_deaths_raw.csv", stringsAsFactors = F))
here::file_path()
here:dr_here
here:dr_here()
here:dr_here(here)
rprojroot::has_file()
here::rprojroot::has_file()
dr_here()
dr_here(here)
read.delim(here::here("data","covid_US_deaths_raw.csv", stringsAsFactors = F))
here::here()
here::here('covid_US_deaths_raw.csv')
read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
read.csv(here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
