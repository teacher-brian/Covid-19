head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
covid_US_cases_tidy %>%filter(Date>today()-21,Province_State=='Washington')
today()
Date
source('~/Projects/Psych217/ZipFilePractice/scripts/covid_US_cases_exporatory_graphs.r', echo=TRUE)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington')
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington')
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date)
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'free')
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'fixed')
covid_US_cases_tidy
covid_US_cases_tidy %>% select(Admin2) %>% filter(!is.null(Admin2))
covid_US_cases_tidy %>% select(Admin2) %>% filter(!is.null(Admin2)) %>% with(unique(Admin2))
memory.size
memory.size()
df
load("US_county_population.RData")
df<- do.call(rbind,df)
df
rm(list=ls(-df))
rm(list=-df)
rm(list=ls())
library(here)
library(tidyverse)
library(lubridate)
load("US_county_population.RData")
df<- do.call(rbind,df)
library(forcats)
covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy
covid_US_cases_tidy %>% filter(Country_Region=='US')
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2)
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',is.null(Admin2)==T) %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US') %>% select(Admin2,Date,count) %>% with(Admin2,is.null(Admin2))
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2=="") %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2!="") %>% select(Admin2,Date,count)
covid_US_cases_tidy %>% filter(Country_Region=='US',Admin2!="") %>% select(Admin2) %>% with(Admin2,unique())
df
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_glob_death <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',stringsAsFactors = F)
recent_date <- colnames(covid_glob_death)[length(covid_glob_death)]
write.csv(covid_glob_death,file='./data/covid_global_deaths_raw.csv')
library(lubridate)
drop_x <- function(x){
y <- gsub("X","",x)
y <- mdy(y)
return(y)
}
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>%
#select(Country.Region, Province.State,Lat, Long,X1.22.20:recent_date) %>%
gather(key = Date, value= count,-c(Country.Region,Lat,Long,Province.State))
cg_tidy<-countryID_dates %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Province.State <-  factor(cg_tidy$Province.State)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Province.State <-  factor(cg$Province.State)
cg$Date <- ymd(cg$Date)
str(cg)
today <- drop_x(recent_date)
cg %>%
filter(Date==today) %>%
#group_by(Date) %>%
summarise(total=sum(count))
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
fr.pop <- 65e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total,label=total))+geom_point(size=.5)+
geom_text(aes(label=ifelse(Date==today,total,'')),hjust=1.5,vjust=.5)+
ggtitle(paste0('total cases as of\n',today))+
scale_y_continuous(labels = scales::comma)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == today) %>%
filter(Province.State=="") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(grand_tot=sum(total)) %>%
print(.,n=400)
rm(list=ls())
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
wa.new.cases %>%
wa.new.cases[,c(3,12)] <- lapply(wa.new.cases[,c(3,12)],function(x) factor(x))
wa.new.cases %>%
wa.new.cases[,c(3,12)] <- lapply(wa.new.cases[,c(3,12)],function(x) factor(x))
lapply(wa.new.cases[,c('Admin2','sort.Admin2')], levels)
wa.new.cases[,12] <- factor(wa.new.cases$Admin2,levels = wa.new.cases$Admin2[1:41], ordered = T)
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'fixed')
# all us state and then some
drop_ship <- c("Diamond Princess","Grand Princess")
drop_state <- c("New Jersey","New York","Massachusetts","California",)
protest_states <- c("Minnesota","Texas","Colorado","Michigan","Illinois",
"Wisconsin","Ohio","Mississippi","North Carolina","Alabama","Arizona")
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,
Admin2,
Country_Region)) %>%
group_by(Province_State,
#Admin2,
Date) %>%
summarise(count = sum(count, na.rm = T)) %>%
filter(Date > "2020-04-20", !Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases = count - lag(count)) %>%
group_by(Date, Province_State) %>% arrange(desc(Date), desc(new_cases)) %>%
mutate(sort_state = factor(Province_State))  -> tmp
tmp[,c(1,5)] <- lapply(tmp[,c(1,5)],function(x) factor(x))
lapply(tmp[,c('Province_State','sort_state')], levels)
tmp[,5] <- factor(tmp$Province_State,levels = tmp$Province_State[1:56], ordered = T)
tmp %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~sort_state,scales = 'fixed')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with , loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
tmp %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~sort_state,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with , loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
rm(list=ls())
git status
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_glob_death <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',stringsAsFactors = F)
#write.csv(covid_glob_death,file='./data/covid_global_deaths_raw.csv')
recent_date <- colnames(covid_glob_death)[length(covid_glob_death)]
write.csv(covid_glob_death,file='./data/covid_global_deaths_raw.csv')
library(tidyverse)
library(lubridate)
# function to strip X from date and conver to lubridate
drop_x <- function(x){
y <- gsub("X","",x)
y <- mdy(y)
return(y)
}
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
countryID_dates<- cg %>%
#select(Country.Region, Province.State,Lat, Long,X1.22.20:recent_date) %>%
gather(key = Date, value= count,-c(Country.Region,Lat,Long,Province.State))
#countryID_info<- cg %>% select(Country.Region,
#Province.State,
#                              -c(X1.22.20:recent_date))
#cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
## by including province state above, the joining actdion has been interfered with
cg_tidy<-countryID_dates %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Province.State <-  factor(cg_tidy$Province.State)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Province.State <-  factor(cg$Province.State)
cg$Date <- ymd(cg$Date)
str(cg)
# total as of today
today <- drop_x(recent_date)
cg %>%
filter(Date==today) %>%
#group_by(Date) %>%
summarise(total=sum(count))
# comps
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
fr.pop <- 65e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='France'~ count/fr.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Province.State=="") %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total,label=total))+geom_point(size=.5)+
geom_text(aes(label=ifelse(Date==today,total,'')),hjust=1.5,vjust=.5)+
ggtitle(paste0('total cases as of\n',today))+
scale_y_continuous(labels = scales::comma)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == today) %>%
filter(Province.State=="") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(grand_tot=sum(total)) %>%
print(.,n=400)
library(tidyverse)
library(lubridate)
library(forcats)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
library(tidyverse)
library(lubridate)
library(forcats)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
#covid_US_cases_tidy<- read.csv(file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington"#,
#Admin2=="King"|
# Admin2=="Spokane"|
#Admin2=="Snohomish",count>01
) %>%
group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)+
facet_wrap(~Admin2,scales='free')
new.cases <- c("Adams",'Benton','Grant', 'Clark', 'Franklin','Skagit','Spokane','Thurston','Walla Walla','Yakima',"King")
covid_US_cases_tidy %>% filter(Date>today()-21,Province_State=='Washington') %>%
#filter(Admin2 == "King" |Admin2 %in% new.cases) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>%
arrange(desc(Date),desc(new_cases)) %>%
mutate(sort.Admin2=factor(Admin2))-> wa.new.cases#
wa.new.cases %>%
wa.new.cases[,c(3,12)] <- lapply(wa.new.cases[,c(3,12)],function(x) factor(x))
wa.new.cases %>%
wa.new.cases[,c(3,12)] <- lapply(wa.new.cases[,c(3,12)],function(x) factor(x))
wa.new.cases[,c(3,12)] <- lapply(wa.new.cases[,c(3,12)],function(x) factor(x))
lapply(wa.new.cases[,c('Admin2','sort.Admin2')], levels)
wa.new.cases[,12] <- factor(wa.new.cases$Admin2,levels = wa.new.cases$Admin2[1:41], ordered = T)
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'fixed')
wa.new.cases %>%
ggplot(aes(Date,new_cases))+
geom_point(shape=18)+geom_line(alpha=.2)+geom_smooth(se=F)+
facet_wrap(~sort.Admin2,scales = 'free')
# all us state and then some
drop_ship <- c("Diamond Princess","Grand Princess")
drop_state <- c("New Jersey","New York","Massachusetts","California",)
protest_states <- c("Minnesota","Texas","Colorado","Michigan","Illinois",
"Wisconsin","Ohio","Mississippi","North Carolina","Alabama","Arizona")
covid_US_cases_tidy %>%
select(-c(iso2:FIPS,
Admin2,
Country_Region)) %>%
group_by(Province_State,
#Admin2,
Date) %>%
summarise(count = sum(count, na.rm = T)) %>%
filter(Date > "2020-04-20", !Province_State %in% drop_ship) %>%
#filter(!Province_State %in% drop_state) %>%
#filter(Province_State %in% protest_states) %>%
mutate(new_cases = count - lag(count)) %>%
group_by(Date, Province_State) %>% arrange(desc(Date), desc(new_cases)) %>%
mutate(sort_state = factor(Province_State))  -> tmp
tmp[,c(1,5)] <- lapply(tmp[,c(1,5)],function(x) factor(x))
lapply(tmp[,c('Province_State','sort_state')], levels)
tmp[,5] <- factor(tmp$Province_State,levels = tmp$Province_State[1:56], ordered = T)
tmp %>%
ggplot(aes(x=Date,new_cases))+ geom_point(size=.2)+
geom_line()+
facet_wrap(~sort_state,scales = 'free')+
ggtitle("new cases in the States since 4/21\nBlue simple linear regression, pink with , loess")+
geom_smooth(method='lm',color='blue',se=F)+
geom_smooth(color='pink',size=.6)
