print(.,n=400)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-23") %>%
summarise(total=sum(count))
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-23") %>%
summarise(total=sum(count)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-23") %>%
summarise(total=sum(count)) %>%
arragne(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Date <- ymd(cg$Date)
countries.of.interest <- c('Sweden', 'Korea, South','US')
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop)) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total))+geom_point()+
ggtitle('total cases as of...')+
scale_y_continuous(labels = scales::comma)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-24") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
# why france
cg %>%
filter(Country.Region=="France") %>%
group_by(Country.Region,Date) %>%
#filter(Date == "2020-06-24") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
# why france
cg %>%
filter(Country.Region=="France") %>%
group_by(Country.Region,Date) %>%
#filter(Date >= "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
# why france
cg %>%
filter(Country.Region=="France") %>%
group_by(Country.Region,Date) %>%
filter(Date >= "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
# why france
cg %>%
filter(Country.Region=="France") %>%
group_by(Country.Region,Date) %>%
filter(Date >= "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
library(tidyverse)
library(lubridate)
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Date <- ymd(cg$Date)
68e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom")
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point()+facet_wrap(~Country.Region)
cg %>%
select(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count))
cg %>%
select(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count))
cg
unique(cg$Country.Region)
sort(unique(cg$Country.Region))
cg %>%
filter(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count))
cg %>%
filter(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
arrange(desc(total))
cg %>%
filter(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
print(.,n=200)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point()+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point()+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count,color='Country.Region'))+geom_point()+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count),color='Country.Region')+geom_point()+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point()+facet_wrap(~Country.Region,color='Country.Region',scales='free')
cg %>%
filter(Country.Region=='United Kingdom',Date>'2020-04-01') %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
print(.,n=200)
cg %>%
filter(Country.Region=='United Kingdom',Date>'2020-04-01') %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
cg %>%
filter(Country.Region=='United Kingdom') %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point(,color='Country.Region')+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point(size=.01)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-05-01',Date<'2020-06-01') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-05-01',Date<'2020-06-01') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-04-01',Date<'2020-05-01') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-03-01',Date<'2020-04-01') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-03-01',Date<'2020-03-09') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-02-14',Date<'2020-03-09') %>%
ggplot(aes(x=Date,count))+geom_point(size=)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-02-14',Date<'2020-03-09') %>%
ggplot(aes(x=Date,count))+geom_point(size=1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-02-01',Date<'2020-03-09') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-02-01',Date<'2020-02-15') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-01-15',Date<'2020-02-15') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-01-01',Date<'2020-01-25') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
cg %>%
filter(Country.Region=='United Kingdom',Date=="2020-02-03") %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
cg %>%
filter(Country.Region=='United Kingdom',Date=="2020-02-03") %>%
group_by(Date) %>%
summarise(total=sum(count))
cg %>%
filter(Country.Region %in% countries.of.interest,Date=="2020-02-03") %>%
group_by(Date,Country.Region) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
str(cg_tidy)
cg %>%
filter(Country.Region %in% countries.of.interest,Date=="2020-02-03") %>%
group_by(Date,Country.Region) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-24") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
# why france
cg %>%
filter(Country.Region=="France") %>%
group_by(Country.Region,Date) %>%
filter(Date >= "2020-06-23") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
cg %>%
filter(Country.Region %in% countries.of.interest,Date=="2020-02-03") %>%
group_by(Date,Country.Region) %>%
summarise(total=sum(count)) %>%
print(.,n=200) %>%
ggplot(aes(x=Date,y=total))+geom_point(size=.1)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
grep('united',cg$Country.Region,ignore.case=T)
grep('united',unique(cg$Country.Region),ignore.case=T)
grep('united',unique(cg$Country.Region),ignore.case=T,value=T)
grep('england',unique(cg$Country.Region),ignore.case=T,value=T)
grep('Ireland',unique(cg$Country.Region),ignore.case=T,value=T)
unique(cg$Country.Region)
sort(unique(cg$Country.Region))
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.5)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region,scales='free')
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region)
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
library(tidyverse)
library(lubridate)
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
# tidy up the data for graphing
recent_date <- colnames(cg)[length(cg)]
head(cg)
str(cg)
countryID_dates<- cg %>% select(Country.Region, Lat, Long,X1.22.20:recent_date) %>% gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
#Use lapply() to coerce and replace the chosen columns:
cg_tidy$Country.Region <-  factor(cg_tidy$Country.Region)
cg_tidy$Date<- mdy(cg_tidy$Date)
str(cg_tidy)
#write.csv(cg_tidy,file='./data/covid_global_cases_tidy.csv')
cg<- read.csv(here::here('data',file='./covid_global_cases_tidy.csv'),stringsAsFactors = F)
cg$Country.Region <- as.factor(cg$Country.Region)
cg$Date <- ymd(cg$Date)
countries.of.interest <- c('Sweden', 'Korea, South','US',"United Kingdom","France")
sk.pop <- 51e6
US.pop <- 330e6
sw.pop <- 10e6
uk.pop <- 68e6
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
mutate(proportion=case_when(Country.Region=='Sweden'~ count/sw.pop,
Country.Region=='Korea, South'~ count/sk.pop,
Country.Region=='US'~ count/US.pop,
Country.Region=='United Kingdom'~ count/uk.pop
)
) %>%
ggplot(aes(x=Date,proportion))+geom_point(size=.1)+facet_wrap(~Country.Region)
# no proport
cg %>%
group_by(Country.Region) %>%
filter(Country.Region %in% countries.of.interest) %>%
# filter(Date>'2020-01-01',Date<'2020-02-05') %>%
ggplot(aes(x=Date,count))+geom_point(size=.1)+facet_wrap(~Country.Region)
cg %>%
group_by(Date) %>%
summarise(total=sum(count)) %>%
ggplot(aes(x=Date,y=total))+geom_point()+
ggtitle('total cases as of...')+
scale_y_continuous(labels = scales::comma)
#today=today()
cg %>%
group_by(Country.Region,Date) %>% filter(Date == "2020-06-24") %>%
summarise(total=sum(count)) %>%
arrange(desc(total)) %>%
#summarise(new=total[2]-total[1]) %>%
# ungroup(.) %>%
# summarise(grand_tot=sum(total)) %>%
print(.,n=400)
str(cg)
covid_cases_global <- read.csv(here::here("./COVID-19/csse_covid_19_data/csse_covid_19_time_series/","time_series_covid19_confirmed_global.csv"),stringsAsFactors = F)
cg<- covid_cases_global
head(cg)
str(cg)
countryID_dates<- cg %>%
#select(Country.Region, Lat, Long,X1.22.20:recent_date) %>%
gather(key = Date, value= count,-c(Country.Region,Lat,Long))
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
cg_tidy<- left_join(countryID_info,countryID_dates,by="Country.Region")
cg_tidy<-cg_tidy %>% mutate(Date=gsub("X","",Date))
str(cg_tidy)
countryID_info<- cg %>% select(Country.Region,-c(X1.22.20:recent_date))
countryID_info
