covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m)) %>% summarise(sum(m))
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m)) %>% summarise(sum(m))
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m)) %>% summarise(sum(m))
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
#write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date)
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>% filter(Date>"2020-04-10")
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>% filter(Date>"2020-04-10") %>% arrange(desc(Date),desc(new_cases))
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>% filter(Date>"2020-04-10") %>% arrange(desc(Date),desc(new_cases))
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>% filter(Date>"2020-04-10") %>% arrange(desc(Date),desc(new_cases)) %>% print(.,n-100)
covid_US_cases_tidy %>%filter(Province_State=='Washington',count>50) %>%
group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_cases=count-count_lag) %>% group_by(Date) %>% filter(Date>"2020-04-10") %>% arrange(desc(Date),desc(new_cases)) %>% print(.,n=100)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table,AdmAdmin2)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table,Admin2)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table(Admin2))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Date) %>% summarise(sum(count))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table(count[Admin2=="Washington"]))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table(count[Province_State=="Washington"]))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table(Admin2[Province_State=="Washington"]))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% with(table(Admin2[Province_State=="Washington"]))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>% summarise(sum(count()))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>% summarise(sum(count))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(n=100)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(,n=100)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(.,n=100)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(.,n=100)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(.,n=41)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(.,n=31)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(n=31)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print(=31)
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% summarise(sum(count)) %>% print()
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>%group_by(Admin2) %>%  summarise(sum(count)) %>% print()
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>%group_by(Admin2) %>%  summarise(sum(count)) %>% print(n=100)
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m)) %>% summarise(sum(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
str(covid_tidy)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
library(tidyverse)
library(lubridate)
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
#write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
names(covid_tidy[c(1:8,11)])
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m)) %>% summarise(sum(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',alpha=.5)+geom_line(stat='smooth',alpha=.5)+
ggtitle("Daily reporting of Fatalities")
covid_tidy %>% filter(Province_State=="Washington",Admin2=="Unassigned") %>% select(Combined_Key)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region))
covid_tidy %>% filter(Province_State=="Washington",Admin2!='Unassigned',count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% summarise(sum(count()))
covid_tidy %>% filter(Province_State=="Washington",Admin2!='Unassigned',count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% summarise(sum(count))
covid_tidy %>% filter(Province_State=="Washington",Admin2!='Unassigned',count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region))
covid_tidy %>% filter(Province_State=="Washington",Admin2!='Unassigned',count>0) %>% group_by(Admin2) %>%
arrange(-desc(count)) %>% select(-c(iso2:FIPS,Country_Region))
covid_tidy %>% filter(Province_State=="Washington",Admin2!='Unassigned',count>0) %>% group_by(Admin2) %>%
arrange(desc(count)) %>% select(-c(iso2:FIPS,Country_Region))
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
rm(list=ls())
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
save.image("~/Projects/Psych217/ZipFilePractice/testWorkspaceZipfilePractice.RData")
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
setwd("~/Projects/Psych217/ZipFilePractice/COVID-19")
setwd("~/Projects/Psych217/ZipFilePractice")
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
library(here)
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
# total cumulative cases in Washington state, King and Spkane county
covid_US_cases_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>01) %>% group_by(Admin2) %>%
arrange(desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date)%>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',se=F,alpha=.6)
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',alpha=.5)+geom_line(stat='smooth',alpha=.5)+
ggtitle("Daily reporting of Fatalities")
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>% arrange(desc(Date))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>% arrange(desc(Date))
libraries <- c("here","ggplot2","lubridate","tidyverse")
lapply(libraries, library, character.only = TRUE)
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
#write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
covid_us <- read.csv(here::here("data","covid_US_deaths_raw.csv"), stringsAsFactors = F)
recent_date <- colnames(covid_us)[length(covid_us)]
head(covid_us)
str(covid_us)
unique(covid_us$Province_State)
UID_dates<- covid_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_us %>% select(-c(X1.22.20:recent_date))
covid_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_tidy<-covid_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_tidy)
cols<- names(covid_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_tidy[cols] <- lapply(covid_tidy[cols], factor)  ## as.factor() could also be used
covid_tidy$Date<- mdy(covid_tidy$Date)
str(covid_tidy)
# list of counties in Washington
covid_tidy %>% filter(Province_State=="Washington") %>% group_by(Admin2) %>%
summarise(m=max(count)) %>% arrange(desc(m))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>%
ggplot(aes(Date,count,color=Admin2))+geom_point(shape=18)+
geom_smooth(se=F,,alpha=.5)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>%
ggplot(aes(Date,new_deaths,color=Admin2))+geom_point(shape=18)+
geom_line(stat='smooth',alpha=.5)+geom_line(stat='smooth',alpha=.5)+
ggtitle("Daily reporting of Fatalities")
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date)
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>% arrange(desc(Date))
covid_tidy %>% filter(Province_State=="Washington",Admin2=="King"|Admin2=="Spokane"|Admin2=="Snohomish",count>0) %>% group_by(Admin2) %>%
arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>% arrange(desc(Date))
covid_tidy %>% arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>%
mutate(count_lag=lag(count,1),new_deaths=count-count_lag) %>% group_by(Date) %>% arrange(desc(Date))
covid_tidy %>% arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>% summarise(sum(count,na.rm=T))
covid_tidy %>% arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>% summarise(sum(count,na.rm=T)) %>% arrange(desc(Date))
covid_tidy %>% arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region))
covid_tidy %>% arrange(-desc(Date)) %>% select(-c(iso2:FIPS,Country_Region)) %>% group_by(Date) %>% summarise(sum(count,na.rm=T)) %>% arrange(desc(Date))
# read US Cases into Rstudio ----------------------------------------------
covid_cases_us <- read.csv(here::here("data","covid_US_cases_raw.csv"),stringsAsFactors = F)
# tidy up the data for graphing
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
head(covid_cases_us)
str(covid_cases_us)
UID_dates<- covid_cases_us %>% select(UID,X1.22.20:recent_date) %>% gather(key = Date, value= count,-UID)
UID_info<- covid_cases_us %>% select(-c(X1.22.20:recent_date))
covid_US_cases_tidy<- left_join(UID_info,UID_dates,by="UID")
covid_US_cases_tidy<-covid_US_cases_tidy %>% mutate(Date=gsub("X","",Date))
str(covid_US_cases_tidy)
cols<- names(covid_US_cases_tidy[c(1:8,11)])
#Use lapply() to coerce and replace the chosen columns:
covid_US_cases_tidy[cols] <- lapply(covid_US_cases_tidy[cols], factor)  ## as.factor() could also be used
covid_US_cases_tidy$Date<- mdy(covid_US_cases_tidy$Date)
str(covid_US_cases_tidy)
#write.csv(covid_US_cases_tidy,file='./data/covid_US_cases_tidy.csv')
# list of counties in Washington
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Date) %>% summarise(sum(count,na.rm = F))
covid_US_cases_tidy %>% filter(Province_State=="Washington") %>% group_by(Date) %>% summarise(sum(count,na.rm = F)) %>% arrange(desc(Date))
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
covid_cases_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',stringsAsFactors = F)
recent_date <- colnames(covid_cases_us)[length(covid_cases_us)]
write.csv(covid_cases_us,file='./data/covid_US_cases_raw.csv')
covid_us <- read.csv(file='./COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',stringsAsFactors = F)
write.csv(covid_us,file='./data/covid_US_deaths_raw.csv')
